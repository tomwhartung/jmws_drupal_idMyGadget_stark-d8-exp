<?php
/*
 * Theme file.  Purpose and goal: TBD.
 */
// print '<p>Hi from the Theme file (idmygadget_stark.theme)!</p>';
// $hi_text = 'Hi Text!';
use Drupal\idmygadget;

global $vars;
$vars['hi_text'] = 'In the theme file we are setting the hi_text in the global variable $vars .';
/**
 * Preprocess the page
 */
function idmygadget_stark_preprocess_page( &$vars ) {
  global $jmwsIdMyGadget;
  // $jmwsIdMyGadget = new IdMyGadgetService();
  //
  // Tried to use drupal_check_module but it is not working at this time.
  // See experimental code saved just now in the jmws_drupal_stark_idMyGadget-d8-first_try repo.
  // Fortunately we have a work-around, but we might want to
  //  return to this logic if and when the drupal_check_module function is fixed.
  // include_once DRUPAL_ROOT . '/core/includes/install.inc';
  // $idmygadgetIsInstalled = drupal_check_module( 'idmygadget' );
  $config = \Drupal::config('idmygadget.settings');
  $gadgetDetectorIndex = $config->get('idmygadget_gadget_detector');
  $showSiteNamePhone = $config->get('idmygadget_show_site_name_phone');
  $showSiteNameTablet = $config->get('idmygadget_show_site_name_tablet');
  $showSiteNameDesktop = $config->get('idmygadget_show_site_name_desktop');

  $vars['debugText1'] = 'Initializing debugText1';
  $vars['debugText2'] = 'Initializing debugText2';
  $vars['debugText3'] = 'Initializing debugText3';
  $vars['debugText4'] = 'Initializing debugText4';

  $vars['debugText1'] = 'Instantiating the jmwsIdMyGadgetThemeService object...';
  require_once( 'src/JmwsIdMyGadget/JmwsIdMyGadgetThemeService.php' );
  $jmwsIdMyGadgetThemeService = new JmwsIdMyGadgetThemeService();
  $idMyGadgetService = $jmwsIdMyGadgetThemeService->getService();

  if ( isset($jmwsIdMyGadget) ) {
    $vars['debugText2'] = 'The jmwsIdMyGadget object isset!';
  }

  if ( isset($idMyGadgetService) ) {
    $vars['debugText3'] = 'The idMyGadgetService object isset!';
  }

  $vars['gadgetDetectorText'] = 'gadgetDetectorIndex = "' . $gadgetDetectorIndex . '"';
  $vars['showSiteNamePhoneText'] = '$showSiteNamePhone = "' . $showSiteNamePhone . '"';
  $vars['showSiteNameTabletText'] = '$showSiteNameTablet = "' . $showSiteNameTablet . '"';
  $vars['showSiteNameDesktopText'] = '$showSiteNameDesktop = "' . $showSiteNameDesktop . '"';
}

/**
 * Check whether the IdMyGadget module is installed and enabled,
 * If something is wrong, generate the most accurate error message possible
 */
function idMyGadget_stark_check_idMyGadget_installation() {
  global $jmwsIdMyGadget;

  require_once( 'src/JmwsIdMyGadget/JmwsIdMyGadgetModuleMissing.php' );
  $jmwsIdMyGadget = new JmwsIdMyGadgetModuleMissing();
  $jmwsIdMyGadget->errorMessage = IDMYGADGET_UNKNOWN_ERROR;

  $idMyGadgetInfoFile =  DRUPAL_ROOT . '/' . JmwsIdMyGadgetThemeService::IDMYGADGET_INFO_FILE;
  $config = \Drupal::config('idmygadget.settings');
  $gadgetDetectorIndex = $config->get('idmygadget_gadget_detector');

  if ( file_exists($idMyGadgetInfoFile) )  {
    if ( isset($gadgetDetectorIndex) ) {
      $jmwsIdMyGadget->errorMessage = IDMYGADGET_UNKNOWN_ERROR;
    }
    else {
      $jmwsIdMyGadget->errorMessage = IDMYGADGET_NOT_ACTIVE;
    }
  }
  else {
    $jmwsIdMyGadget->errorMessage = IDMYGADGET_NOT_INSTALLED;
    // print '<p>It is NOT installed</p>';
  }

  drupal_set_message( t($jmwsIdMyGadget->errorMessage), 'error' );
}


?>